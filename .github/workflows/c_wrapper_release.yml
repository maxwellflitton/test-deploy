name: Release to Github

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.2.3)'
        required: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        platform:
          - os: ubuntu-latest
            linux-override: false
          - os: ubuntu-latest
            linux-override: true
          - os: macos-13
            linux-override: false
          - os: macos-14
            linux-override: false
          - os: windows-latest
            linux-override: false
    runs-on: ${{ matrix.platform.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install cross-compilation dependencies
        if: matrix.platform.linux-override == true
        run: |
          sudo dpkg --add-architecture arm64
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libc6-dev-arm64-cross
          rustup target add aarch64-unknown-linux-gnu

      - name: Build binary
        shell: bash
        run: |
          if [ "${{ matrix.platform.linux-override }}" = "true" ]; then
            cargo build -p c-wrapper --target aarch64-unknown-linux-gnu --release --verbose
          else
            cargo build -p c-wrapper --release --verbose
          fi

      - name: Upload Binary
        uses: actions/upload-artifact@v4
        with:
          name: surrealml-${{ matrix.platform.os }}-${{ matrix.platform.linux-override }}
          path: |
            target/release/libc_wrapper.*
            target/aarch64-unknown-linux-gnu/release/libc_wrapper.*

  release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download All Binaries
        uses: actions/download-artifact@v4
        with:
          path: downloaded-binaries

      - name: Prepare release binaries
        run: |
          mkdir -p release
          find downloaded-binaries -type f -name "libc_wrapper.*" -exec cp {} release/ \;

      - name: Archive binaries
        uses: ksm2/archive-action@v1
        with:
          name: "surrealml-v${{ github.event.inputs.version }}"
          format: tar.gz
          include: release/* README.md

      - name: Create or Update Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "surrealml-v${{ github.event.inputs.version }}.tar.gz"
          allowUpdates: true
          generateReleaseNotes: true
          token: ${{ secrets.RELEASE_TOKEN }}
          tag: "v${{ github.event.inputs.version }}"
